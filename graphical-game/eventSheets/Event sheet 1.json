{
	"name": "Event sheet 1",
	"events": [
		{
			"eventType": "variable",
			"name": "G",
			"type": "number",
			"initialValue": "1500000",
			"comment": "gravitational constant",
			"isStatic": false,
			"isConstant": true,
			"sid": 676538581334769
		},
		{
			"eventType": "variable",
			"name": "minGravityDistance",
			"type": "number",
			"initialValue": "20",
			"comment": "minimum distance where full force of gravity is applied (below this distance, the force scales down until it reaches 0 at distance 0)",
			"isStatic": false,
			"isConstant": true,
			"sid": 121730032563940
		},
		{
			"eventType": "variable",
			"name": "maxOrbitDistance",
			"type": "number",
			"initialValue": "150",
			"comment": "Maximum distance you can be from a planet and orbit it",
			"isStatic": false,
			"isConstant": true,
			"sid": 374468720435562
		},
		{
			"eventType": "variable",
			"name": "highestShipPos",
			"type": "number",
			"initialValue": "320",
			"comment": "Highest (lowest Y) position the ship may take on the screen",
			"isStatic": false,
			"isConstant": true,
			"sid": 895585357274453
		},
		{
			"eventType": "variable",
			"name": "heatScale",
			"type": "number",
			"initialValue": "32",
			"comment": "",
			"isStatic": false,
			"isConstant": true,
			"sid": 902902175981024
		},
		{
			"eventType": "variable",
			"name": "chillScale",
			"type": "number",
			"initialValue": "1.2",
			"comment": "",
			"isStatic": false,
			"isConstant": true,
			"sid": 444155869486192
		},
		{
			"eventType": "variable",
			"name": "enginePower",
			"type": "number",
			"initialValue": "150",
			"comment": "",
			"isStatic": false,
			"isConstant": true,
			"sid": 548281517917622
		},
		{
			"eventType": "variable",
			"name": "score",
			"type": "number",
			"initialValue": "0",
			"comment": "",
			"isStatic": false,
			"isConstant": false,
			"sid": 361925266565031
		},
		{
			"eventType": "block",
			"conditions": [
				{
					"id": "every-tick",
					"objectClass": "System",
					"sid": 718405711193279
				}
			],
			"actions": [
				{
					"type": "script",
					"script": "\nfunction distance(a, b) {\n\treturn Math.sqrt((a.x - b.x) ** 2 + (a.y - b.y) ** 2);\n}\n\nconst planets = runtime.objects['Planet'].getAllInstances();\nconst ship = runtime.objects['Ship'].getFirstInstance();\n\nif (ship === null) {\n\treturn;\n}\n\nlet xToMouse = runtime.mouse.getMouseX() - ship.x;\nlet yToMouse = runtime.mouse.getMouseY() - ship.y;\nconst mouseDist = Math.sqrt(xToMouse ** 2 + yToMouse ** 2);\nxToMouse /= mouseDist;\nyToMouse /= mouseDist;\n\nlet accelX = xToMouse * runtime.globalVars.enginePower;\nlet accelY = yToMouse * runtime.globalVars.enginePower;\n\nconsole.log(`HEAT IS ${runtime.globalVars.heatScale}`);\n\nlet topY = Infinity;\n\nfor (const planet of planets) {\n\tconst dist = distance(planet, ship);\n\t// apply gravity from planet to ship\n\tlet force = 0;\n\tif (dist > runtime.globalVars.minGravityDistance) {\n\t\tforce = runtime.globalVars.G / (dist * dist);\n\t} else {\n\t\tconst peak = runtime.globalVars.G / (runtime.globalVars.minGravityDistance ** 2);\n\t\tforce = (peak / runtime.globalVars.minGravityDistance) * dist;\n\t}\n\n\taccelX += force * (planet.x - ship.x) / dist;\n\taccelY += force * (planet.y - ship.y) / dist;\n\t\n\tif (planet.y < topY) {\n\t\ttopY = planet.y;\n\t}\n\t\n\tship.instVars.temperature += runtime.globalVars.heatScale * runtime.dt / dist;\n}\n\nship.instVars.temperature -= runtime.globalVars.chillScale * runtime.dt;\n\n// accelerate\nship.instVars.dx += accelX * runtime.dt;\nship.instVars.dy += accelY * runtime.dt;\n\n// move\nship.x += ship.instVars.dx * runtime.dt;\nif (ship.instVars.dy > 0) {\n\t// move ship down\n    ship.y += ship.instVars.dy * runtime.dt;\n} else if (ship.y > runtime.globalVars.highestShipPos) {\n\t// move ship up\n\tconst movement = ship.instVars.dy * runtime.dt;\n\tif (ship.y + movement < runtime.globalVars.highestShipPos) {\n\t\t// move ship to boundary and move planets to match\n\t\tconst movementForPlanets = -(movement - (runtime.globalVars.highestShipPos - ship.y));\n\t\tfor (const p of planets) {\n\t\t\tp.y += movementForPlanets;\n\t\t}\n\t\tship.y = runtime.globalVars.highestShipPos;\n\t} else {\n\t\tship.y += movement;\n\t}\n} else {\n\t// move planets down\n\tfor (const p of planets) {\n\t\tp.y -= ship.instVars.dy * runtime.dt;\n\t}\n}\n\n// wrap\nship.x %= runtime.layout.width;\nship.x += runtime.layout.width;\nship.x %= runtime.layout.width;\n\nif (ship.instVars.dy < 0) {\n\truntime.globalVars.score -= ship.instVars.dy * runtime.dt;\n}\n\n// spawn new planet\nif (topY > 100) {\n\tconst newPlanet = runtime.objects['Planet'].createInstance(0, Math.random() * runtime.layout.width, 0);\n\tconst anims = ['Blue Planet', 'Red Planet', 'Purple Planet', 'Grey Planet'];\n\tnewPlanet.setAnimation(anims[Math.floor(Math.random() * anims.length)]);\n}"
				},
				{
					"id": "create-object",
					"objectClass": "System",
					"sid": 149811143759977,
					"disabled": true,
					"parameters": {
						"object-to-create": "Dot",
						"layer": "0",
						"x": "Ship.X",
						"y": "Ship.Y",
						"create-hierarchy": false,
						"template-name": "\"\""
					}
				},
				{
					"id": "rotate-toward-position",
					"objectClass": "Ship",
					"sid": 596892352624015,
					"parameters": {
						"degrees": "3",
						"x": "Mouse.X",
						"y": "Mouse.Y"
					}
				},
				{
					"id": "set-x",
					"objectClass": "marker",
					"sid": 274806584301505,
					"parameters": {
						"x": "Ship.temperature*240+240"
					}
				},
				{
					"id": "set-text",
					"objectClass": "score",
					"sid": 294335692777554,
					"parameters": {
						"text": "\"Score: \" & round(score)"
					}
				}
			],
			"sid": 503247962209776
		},
		{
			"eventType": "block",
			"conditions": [
				{
					"id": "on-key-pressed",
					"objectClass": "Keyboard",
					"sid": 939793218031733,
					"parameters": {
						"key": 32
					}
				}
			],
			"actions": [
				{
					"type": "script",
					"script": "function distance(a, b) {\n\treturn Math.sqrt((a.x - b.x) ** 2 + (a.y - b.y) ** 2);\n}\n\nconst planets = runtime.objects['Planet'].getAllInstances();\nconst ship = runtime.objects['Ship'].getFirstInstance();\n\nif (ship.instVars.orbiting) {\n\tship.instVars.orbiting = false;\n\tship.instVars.dx \n}\nlet closestPlanet = planets[0], closestDistance = distance(closestPlanet, ship);\nfor (let i = 1; i < planets.length; i += 1) {\n\tconst thisPlanetDistance = distance(planets[i], ship);\n\tif (thisPlanetDistance < closestDistance) {\n\t\tclosestPlanet = planets[i];\n\t\tclosestDistance = thisPlanetDistance;\n\t}\n}\n\nif (closestDistance < runtime.globalVars.maxOrbitDistance) {\n\n\tship.instVars.orbiting = true;\n\tship.instVars.orbitedPlanet = closestPlanet.uid;\n\n\t// compute vector from ship to planet\n\tconst shipToPlanet = [closestPlanet.x - ship.x, closestPlanet.y - ship.y];\n\tconsole.log(shipToPlanet);\n\t// normalize it\n\tshipToPlanet[0] /= closestDistance;\n\tshipToPlanet[1] /= closestDistance;\n\tconsole.log(shipToPlanet);\n\t\n\t// figure out if we should orbit CW or CCW\n\t// P = (x2 - x1)(y3 - y1) - (y2 - y1)(x3 - x1)\n\t// 1 = planet\n\t// 2 = current ship\n\t// 3 = next ship\n\tconst cross = (ship.x - closestPlanet.x) * (ship.y + ship.instVars.dy - closestPlanet.y)\n\t\t- (ship.y - closestPlanet.y) * (ship.x + ship.instVars.dx - closestPlanet.x);\n\tconst counterclockwise = cross < 0;\n\t\n\t// rotate 90 degrees CW\n\tconst orbitDirection = (counterclockwise\n\t\t? [-shipToPlanet[1], shipToPlanet[0]]\n\t\t: [shipToPlanet[1], -shipToPlanet[0]]);\n\tconst orbitVelocity = Math.sqrt(runtime.globalVars.G * 1 / closestDistance);\n\tconsole.log(orbitVelocity);\n\tconst orbitVec = [orbitDirection[0] * orbitVelocity, orbitDirection[1] * orbitVelocity];\n\tconst dv_x = orbitVec[0] - ship.instVars.dx;\n\tconst dv_y = orbitVec[1] - ship.instVars.dy;\n\tship.instVars.dv = Math.sqrt(dv_x ** 2 + dv_y ** 2) / 2;\n\tship.instVars.dx = orbitVec[0];\n\tship.instVars.dy = orbitVec[1];\n}"
				}
			],
			"sid": 156261243726830,
			"children": [
				{
					"eventType": "block",
					"conditions": [
						{
							"id": "is-boolean-instance-variable-set",
							"objectClass": "Ship",
							"sid": 373602350596048,
							"parameters": {
								"instance-variable": "orbiting"
							}
						}
					],
					"actions": [
						{
							"id": "play-by-name",
							"objectClass": "Audio",
							"sid": 928852364392207,
							"parameters": {
								"folder": "sounds",
								"audio-file-name": "\"engine\"",
								"loop": "not-looping",
								"volume": "-20",
								"stereo-pan": "0",
								"tag-optional": "\"\""
							}
						},
						{
							"id": "set-animation",
							"objectClass": "Ship",
							"sid": 434777527408427,
							"parameters": {
								"animation": "\"Engine On\"",
								"from": "beginning"
							}
						},
						{
							"id": "wait",
							"objectClass": "System",
							"sid": 448638120480871,
							"parameters": {
								"seconds": "0.25"
							}
						},
						{
							"id": "set-animation",
							"objectClass": "Ship",
							"sid": 251695678107475,
							"parameters": {
								"animation": "\"Engine Off\"",
								"from": "beginning"
							}
						}
					],
					"sid": 422843611809984
				}
			]
		},
		{
			"eventType": "block",
			"conditions": [
				{
					"id": "on-key-released",
					"objectClass": "Keyboard",
					"sid": 563783083550944,
					"parameters": {
						"key": 32
					}
				}
			],
			"actions": [
				{
					"id": "set-animation",
					"objectClass": "Ship",
					"sid": 169506868163094,
					"parameters": {
						"animation": "\"Engine Off\"",
						"from": "beginning"
					}
				}
			],
			"sid": 510680097101608,
			"children": [
				{
					"eventType": "block",
					"conditions": [
						{
							"id": "is-boolean-instance-variable-set",
							"objectClass": "Ship",
							"sid": 500160226558155,
							"parameters": {
								"instance-variable": "orbiting"
							}
						}
					],
					"actions": [
						{
							"id": "play-by-name",
							"objectClass": "Audio",
							"sid": 960731779666709,
							"parameters": {
								"folder": "sounds",
								"audio-file-name": "\"engine\"",
								"loop": "not-looping",
								"volume": "-20",
								"stereo-pan": "0",
								"tag-optional": "\"\""
							}
						},
						{
							"type": "script",
							"script": "const ship = runtime.objects['Ship'].getFirstInstance();\nif (ship.instVars.orbiting) {\n\tship.instVars.orbiting = false;\n\tconst currentVel = Math.sqrt(ship.instVars.dx ** 2 + ship.instVars.dy ** 2);\n\tconst factor = (currentVel + ship.instVars.dv) / currentVel;\n\tship.instVars.dx *= factor;\n\tship.instVars.dy *= factor;\n}"
						}
					],
					"sid": 209441343012736
				}
			]
		},
		{
			"eventType": "block",
			"conditions": [
				{
					"id": "compare-y",
					"objectClass": "Planet",
					"sid": 535329604012345,
					"parameters": {
						"comparison": 5,
						"y-co-ordinate": "LayoutHeight+Planet.Height"
					}
				}
			],
			"actions": [
				{
					"id": "destroy",
					"objectClass": "Planet",
					"sid": 308101867599153
				}
			],
			"sid": 183026252037812
		},
		{
			"eventType": "block",
			"conditions": [
				{
					"id": "compare-instance-variable",
					"objectClass": "Ship",
					"sid": 799262234395639,
					"parameters": {
						"instance-variable": "temperature",
						"comparison": 5,
						"value": "1"
					}
				}
			],
			"actions": [
				{
					"id": "destroy",
					"objectClass": "Ship",
					"sid": 315804571821053
				},
				{
					"id": "play-by-name",
					"objectClass": "Audio",
					"sid": 635066470595789,
					"parameters": {
						"folder": "sounds",
						"audio-file-name": "\"explosion\"",
						"loop": "not-looping",
						"volume": "-20",
						"stereo-pan": "0",
						"tag-optional": "\"\""
					}
				},
				{
					"id": "destroy",
					"objectClass": "scale",
					"sid": 670376240869569
				},
				{
					"id": "destroy",
					"objectClass": "marker",
					"sid": 472651658789272
				},
				{
					"id": "wait",
					"objectClass": "System",
					"sid": 720974330079428,
					"parameters": {
						"seconds": "1.0"
					}
				},
				{
					"id": "go-to-layout",
					"objectClass": "System",
					"sid": 705732259100810,
					"parameters": {
						"layout": "start"
					}
				}
			],
			"sid": 622664361437424,
			"children": [
				{
					"eventType": "block",
					"conditions": [
						{
							"id": "compare-two-values",
							"objectClass": "System",
							"sid": 878737669090731,
							"parameters": {
								"first-value": "score",
								"comparison": 4,
								"second-value": "highScore"
							}
						}
					],
					"actions": [
						{
							"id": "set-eventvar-value",
							"objectClass": "System",
							"sid": 856746507717978,
							"parameters": {
								"variable": "highScore",
								"value": "round(score)"
							}
						}
					],
					"sid": 210611079185714
				}
			]
		},
		{
			"eventType": "block",
			"conditions": [
				{
					"id": "compare-instance-variable",
					"objectClass": "Ship",
					"sid": 976365971479155,
					"parameters": {
						"instance-variable": "temperature",
						"comparison": 3,
						"value": "-1"
					}
				}
			],
			"actions": [
				{
					"id": "destroy",
					"objectClass": "Ship",
					"sid": 412767840651854
				},
				{
					"id": "play",
					"objectClass": "Audio",
					"sid": 777704685061213,
					"parameters": {
						"audio-file": "explosion",
						"loop": "not-looping",
						"volume": "-20",
						"stereo-pan": "0",
						"tag-optional": "\"\""
					}
				},
				{
					"id": "destroy",
					"objectClass": "scale",
					"sid": 327122789393218
				},
				{
					"id": "destroy",
					"objectClass": "marker",
					"sid": 593855651018767
				},
				{
					"id": "wait",
					"objectClass": "System",
					"sid": 815746607898213,
					"parameters": {
						"seconds": "1.0"
					}
				},
				{
					"id": "go-to-layout",
					"objectClass": "System",
					"sid": 120947974268782,
					"parameters": {
						"layout": "start"
					}
				}
			],
			"sid": 585162636595960
		},
		{
			"eventType": "block",
			"conditions": [
				{
					"id": "compare-two-values",
					"objectClass": "System",
					"sid": 408500238827638,
					"parameters": {
						"first-value": "score",
						"comparison": 4,
						"second-value": "highScore"
					}
				}
			],
			"actions": [
				{
					"id": "set-eventvar-value",
					"objectClass": "System",
					"sid": 609564995824821,
					"parameters": {
						"variable": "highScore",
						"value": "round(score)"
					}
				}
			],
			"sid": 589670105357662
		},
		{
			"eventType": "block",
			"conditions": [
				{
					"id": "on-click",
					"objectClass": "Mouse",
					"sid": 557715363308712,
					"parameters": {
						"mouse-button": "left",
						"click-type": "clicked"
					}
				},
				{
					"id": "compare-two-values",
					"objectClass": "System",
					"sid": 219368719298526,
					"parameters": {
						"first-value": "Ship.Count",
						"comparison": 0,
						"second-value": "0"
					}
				}
			],
			"actions": [
				{
					"id": "create-object",
					"objectClass": "System",
					"sid": 731896668023211,
					"parameters": {
						"object-to-create": "Ship",
						"layer": "0",
						"x": "LayoutWidth/2",
						"y": "LayoutHeight",
						"create-hierarchy": false,
						"template-name": "\"\""
					}
				},
				{
					"id": "set-instvar-value",
					"objectClass": "Ship",
					"sid": 603613817355664,
					"parameters": {
						"instance-variable": "dx",
						"value": "Mouse.X-Ship.X"
					}
				},
				{
					"id": "set-instvar-value",
					"objectClass": "Ship",
					"sid": 221067789644132,
					"parameters": {
						"instance-variable": "dy",
						"value": "Mouse.Y-Ship.Y"
					}
				},
				{
					"id": "set-scale",
					"objectClass": "Ship",
					"sid": 360467538862409,
					"parameters": {
						"scale": "2"
					}
				}
			],
			"sid": 249825947429095
		}
	],
	"sid": 914229451466728
}